#	 ___      ___  ________  ___  ___  ________
#	|"  \    /"  |/"       )|"  \/"  |/"       )
#	 \   \  //  /(:   \___/  \   \  /(:   \___/
#	  \\  \/. ./  \___  \     \\  \/  \___  \
#	   \.    //    __/  \\    /   /    __/  \\
#	    \\   /    /" \   :)  /   /    /" \   :)
#	     \__/    (_______/  |___/    (_______/
#
# 01010110  01010011  01011001  01010011
#
# Auteur: Virgile de Champigny
#
# sudo apt install python3-numpy python3-matplotlib libatlas-base-dev
# /home/pi/klippy-env/bin/pip install -v numpy
#
####################################################################
# ADXL345 - ARDUINO NANO
####################################################################

[mcu nano]
serial = /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0
#    lancer la commande > ls /dev/serial/by-id/* depuis le terminal SSH pour obtenir votre serial.

#-----------------------------------------------------------------#

[adxl345]
cs_pin:nano:PB0
#    La broche d'activation SPI du capteur. Ce paramètre doit être fourni.
#spi_speed: 5000000
#    La vitesse SPI (en hz) à utiliser lors de la communication avec la puce.
#    La valeur par défaut est 5000000.
#spi_bus:
#spi_software_sclk_pin:
#spi_software_mosi_pin:
#spi_software_miso_pin:
#    Voir la section "paramètres SPI communs" pour une description des
#    paramètres ci-dessus.
#axes_map: x,z,y
#    L'axe de l'accéléromètre de chacun des axes X, Y et Z de l'imprimante.
#    Ceci peut être utile si l'accéléromètre est monté dans une orientation
#    qui ne correspond pas à celle de l'imprimante. Par exemple, on peut
#    régler cette option sur "y, x, z" pour permuter les axes X et Y.
#    Il est également possible d'inverser un axe si la direction de l'accéléromètre
#    est inversée (par exemple, "x, z, -y"). La valeur par défaut est "x, y, z".
#Rate: 3200
#    Débit de données de sortie pour ADXL345. ADXL345 prend en charge les débits
#    de données suivants : 3200, 1600, 800, 400, 200, 100, 50, et 25. Notez qu'il n'est
#    pas recommandé de changer ce débit par rapport au ébit par défaut de 3200,
#    les débits inférieurs à 800 affecteront considérablement la qualité des mesures
#    de résonance.

#-----------------------------------------------------------------#

[resonance_tester]
probe_points:
     122.5, 122.5, 20
#    Une liste de coordonnées X, Y, Z de points (un point par ligne) à tester.
#    Au moins un point est requis. Assurez-vous que tous les points avec une certaine marge
#    de sécurité dans le plan XY (~ quelques centimètres) sont accessibles par la tête de l'outil.
accel_chip: adxl345
#    Nom de la puce d'accéléromètre à utiliser pour les mesures. Si la puce adxl345 a été définie
#    sans un nom explicite, ce paramètre peut simplement la référencer en tant que
#    "accel_chip : adxl345", sinon un nom explicite doit être fourni, par exemple
#    "accel_chip : adxl345 my_chip_name". Soit ce paramètre seul, soit les deux paramètres
#    suivants doivent être définis.
#accel_chip_x:
#accel_chip_y:
#    Noms des puces d'accéléromètre à utiliser pour les mesures de chaque axe.
#    Peut être utile, par exemple, sur une imprimante de type "bed slinger", si deux accéléromètres
#    séparés sont montés, un sur le lit (pour l'axe Y), l'autre sur la tête de l'outil (pour l'axe X).
#    Ces paramètres ont le même format que le paramètre 'accel_chip'. Soit le paramètre
#    'accel_chip' soit ces deux paramètres doivent être fournis.
max_smoothing: 0.25
#    Lissage maximal du façonneur (shaper) d'entrée à autoriser pour chaque axe pendant
#    l'auto-calibration (avec la commande 'SHAPER_CALIBRATE'). Par défaut, aucun lissage
#    maximal n'est spécifié. Reportez-vous au guide Measuring_Resonances pour plus de détails
#    sur l'utilisation de cette fonction.
min_freq: 10
#    Fréquence minimale de test des résonances. La valeur par défaut est 5 Hz.
max_freq: 80
#    Fréquence maximale de test des résonances. La valeur par défaut est 133,33 Hz.
#accel_per_hz: 75
#    Ce paramètre permet de déterminer l'accélération à utiliser pour tester une fréquence
#    spécifique: accel = accel_per_hz * freq. Plus haute est cette valeur, plus l'énergie des
#    oscillations est élevée. Peut être fixé à une valeur inférieure à celle par défaut si les
#    résonances deviennent trop fortes sur l'imprimante. Cependant, des valeurs plus faibles
#    rendent les mesures des résonances à haute fréquence moins précises. La valeur par
#    défaut est de 75 (mm/sec).
#hz_per_sec: 1
#    Détermine la vitesse de l'essai. Lors du test de toutes les fréquences dans la plage [min_freq,
#    max_freq], chaque seconde, la fréquence augmente de hz_per_sec.
#    De faibles valeurs rendent le test lent, de grandes valeurs diminueront la précision du test.
#    La valeur par défaut est 1.0 (Hz/sec == sec^-2).

#-----------------------------------------------------------------#

#SHAPER_CALIBRATE AXIS=X -> Noozle
#SHAPER_CALIBRATE AXIS=Y -> Bed

[gcode_macro SHAPER_CALIBRATE_HOTEND]
description: Input Shaper hotend
gcode:
	{% if printer.idle_timeout.state == "Printing" %}
		RESPOND TYPE=error MSG="Interdiction de faire la calibration !"
	{% else %}
		{% if printer.toolhead.homed_axes != "xyz" %} G28 {% endif %}
		SHAPER_CALIBRATE AXIS=X
		SAVE_CONFIG
	{% endif %}

[gcode_macro SHAPER_CALIBRATE_BED]
description: Input Shaper plateau
gcode:
	{% if printer.idle_timeout.state == "Printing" %}
		RESPOND TYPE=error MSG="Interdiction de faire la calibration !"
	{% else %}
		{% if printer.toolhead.homed_axes != "xyz" %} G28 {% endif %}
		SHAPER_CALIBRATE AXIS=Y
		SAVE_CONFIG
	{% endif %}
